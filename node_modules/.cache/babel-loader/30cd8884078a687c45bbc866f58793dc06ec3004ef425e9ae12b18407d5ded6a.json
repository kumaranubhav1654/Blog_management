{"ast":null,"code":"import _slicedToArray from \"C:/Users/ankit/Downloads/c7zdgf/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\ankit\\\\Downloads\\\\c7zdgf\\\\src\\\\components\\\\BarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Chart } from \"primereact/chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BarCharts(props) {\n  _s();\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    chartData = _useState2[0],\n    setChartData = _useState2[1];\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    chartOptions = _useState4[0],\n    setChartOptions = _useState4[1];\n  console.log(chartData);\n  var map1 = new Map();\n  for (var x in chartData) {\n    console.log(\"x = \", chartData[x]);\n    if (isNaN(map1.get(chartData[x].userId))) {\n      map1.set(chartData[x].userId, 1);\n    } else {\n      map1.set(chartData[x].userId, map1.get(chartData[x].userId) + 1);\n    }\n  }\n  //console.log(\"map = \", map1);\n  useEffect(function () {\n    axios.get(\"\".concat(baseURL, \"/posts\")).then(function (res) {\n      setChartData(res.data);\n    }).catch(function (err) {\n      console.log(err);\n    });\n    var data = {\n      labels: Array.from(map1.keys()),\n      datasets: [{\n        label: \"No. of Posts VS User\",\n        data: Array.from(map1.values()),\n        backgroundColor: [\"rgba(255, 159, 64, 0.2)\", \"rgba(75, 192, 192, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(153, 102, 255, 0.2)\"],\n        borderColor: [\"rgb(255, 159, 64)\", \"rgb(75, 192, 192)\", \"rgb(54, 162, 235)\", \"rgb(153, 102, 255)\"],\n        borderWidth: 1\n      }]\n    };\n    var options = {\n      scales: {\n        y: {\n          beginAtZero: true\n        }\n      }\n    };\n    setChartData(data);\n    setChartOptions(options);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      type: \"bar\",\n      data: chartData,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(BarCharts, \"IwROKHPuKnEUHgI07gGP2QYlTYw=\");\n_c = BarCharts;\nvar _c;\n$RefreshReg$(_c, \"BarCharts\");","map":{"version":3,"names":["React","useState","useEffect","Chart","jsxDEV","_jsxDEV","BarCharts","props","_s","_useState","_useState2","_slicedToArray","chartData","setChartData","_useState3","_useState4","chartOptions","setChartOptions","console","log","map1","Map","x","isNaN","get","userId","set","axios","concat","baseURL","then","res","data","catch","err","labels","Array","from","keys","datasets","label","values","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","className","children","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ankit/Downloads/c7zdgf/src/components/BarChart.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Chart } from \"primereact/chart\";\r\n\r\nexport default function BarCharts(props) {\r\n  const [chartData, setChartData] = useState({});\r\n  const [chartOptions, setChartOptions] = useState({});\r\n  console.log(chartData);\r\n  const map1 = new Map();\r\n  for (let x in chartData) {\r\n    console.log(\"x = \", chartData[x])\r\n    if (isNaN(map1.get(chartData[x].userId))) {\r\n      map1.set(chartData[x].userId, 1);\r\n    } else {\r\n      map1.set(chartData[x].userId, map1.get(chartData[x].userId) + 1);\r\n    }\r\n  }\r\n  //console.log(\"map = \", map1);\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${baseURL}/posts`)\r\n      .then((res) => {\r\n        setChartData(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    const data = {\r\n      labels: Array.from(map1.keys()),\r\n      datasets: [\r\n        {\r\n          label: \"No. of Posts VS User\",\r\n          data: Array.from(map1.values()),\r\n          backgroundColor: [\r\n            \"rgba(255, 159, 64, 0.2)\",\r\n            \"rgba(75, 192, 192, 0.2)\",\r\n            \"rgba(54, 162, 235, 0.2)\",\r\n            \"rgba(153, 102, 255, 0.2)\"\r\n          ],\r\n          borderColor: [\r\n            \"rgb(255, 159, 64)\",\r\n            \"rgb(75, 192, 192)\",\r\n            \"rgb(54, 162, 235)\",\r\n            \"rgb(153, 102, 255)\"\r\n          ],\r\n          borderWidth: 1\r\n        }\r\n      ]\r\n    };\r\n    const options = {\r\n      scales: {\r\n        y: {\r\n          beginAtZero: true\r\n        }\r\n      }\r\n    };\r\n\r\n    setChartData(data);\r\n    setChartOptions(options);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <Chart type=\"bar\" data={chartData} options={chartOptions} />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}